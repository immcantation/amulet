name: Python package

on:
  push:
  pull_request:
    branches:
      - main
      - dev
jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: 'latest'
          activate-environment: foo
      # Install igblast
      - name: Install igblast
        shell: bash -el {0}
        run: |
          conda install -y -c conda-forge -c bioconda -c defaults igblast=1.22.0 python=${{ matrix.python-version }} setuptools
          wget -c https://github.com/nf-core/test-datasets/raw/airrflow/database-cache/igblast_base.zip
          unzip igblast_base.zip
          igblastn -version
      # Install pip and pytest
      - name: Install dependencies
        shell: bash -el {0}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Test with pytest
        shell: bash -el {0}
        run: pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
